{"ast":null,"code":"import { TicketService } from '../services/ticket.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CategoryService } from '../../category/services/category.service';\nimport { Ticket } from '../services/ticket';\nimport { Category } from '../../category/services/category';\nimport { StatusService } from 'src/app/category/services/status.service';\nimport { CustomerService } from 'src/app/customer/services/customer.service';\nimport { Status } from 'src/app/category/services/status';\nimport { Customer } from 'src/app/customer/services/customer';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../category/services/category.service\";\nimport * as i2 from \"src/app/category/services/status.service\";\nimport * as i3 from \"src/app/customer/services/customer.service\";\nimport * as i4 from \"../services/ticket.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"../../frontend/frontend-header/frontend-header.component\";\nimport * as i9 from \"../../frontend/frontend-footer/frontend-footer.component\";\n\nfunction CreateticketComponent_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_data_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_data_r6.customer_id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", user_data_r6.customer_first_name, \" \");\n  }\n}\n\nfunction CreateticketComponent_option_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const category_data_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_data_r7.category_id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_data_r7.category_title, \" \");\n  }\n}\n\nfunction CreateticketComponent_option_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const status_data_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_data_r8.status_id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", status_data_r8.status_name, \" \");\n  }\n}\n\nexport let CreateticketComponent = /*#__PURE__*/(() => {\n  class CreateticketComponent {\n    constructor(categoryService, statusService, userService, ticketService, route, router) {\n      this.categoryService = categoryService;\n      this.statusService = statusService;\n      this.userService = userService;\n      this.ticketService = ticketService;\n      this.route = route;\n      this.router = router;\n      this.category = new Category();\n      this.status = new Status();\n      this.user = new Customer();\n      this.ticket = new Ticket();\n      this.isUpdate = false;\n      this.formData = new FormData();\n      this.submitted = false;\n      this.display = \"block\";\n      this.user_level_id = window.sessionStorage.user_level_id;\n      this.user_id = window.sessionStorage.user_id;\n      console.log(\"I am here\");\n    }\n\n    ngOnInit() {\n      const id = this.route.snapshot.paramMap.get('id');\n      console.log(\"I am here ticket\");\n\n      if (id) {\n        this.isUpdate = true;\n        this.getticket(id);\n      } else {\n        this.ticket.ticket_status_id = \"0\";\n        this.ticket.ticket_type_id = \"0\";\n        this.ticket.ticket_user_id = \"0\";\n      }\n\n      if (this.user_level_id == 2) {\n        this.ticket.ticket_user_id = this.user_id;\n        this.ticket.ticket_status_id = \"5\";\n        this.display = \"none\";\n      }\n\n      this.getCategoryOption();\n      this.getStatusOption();\n      this.getUserOption();\n    }\n\n    getCategoryOption() {\n      this.categoryService.getAllCategories().subscribe(data => {\n        console.log(data);\n        this.category = data;\n      }, err => {\n        console.log(err);\n      });\n    }\n\n    getStatusOption() {\n      this.statusService.getAllStatus().subscribe(data => {\n        console.log(data);\n        this.status = data;\n      }, err => {\n        console.log(err);\n      });\n    }\n\n    getUserOption() {\n      this.userService.getAllCustomers().subscribe(data => {\n        console.log(data);\n        this.user = data;\n      }, err => {\n        console.log(err);\n      });\n    }\n\n    getticket(id) {\n      this.ticketService.getticket(id).subscribe(data => {\n        console.log(data);\n        this.ticket = data;\n      }, err => {\n        console.log(err);\n      });\n    }\n\n    newticket() {\n      this.submitted = false;\n      this.ticket = new Ticket();\n    }\n\n    save() {\n      console.log(this.ticket);\n      this.ticketService.createticket(this.ticket).subscribe(data => {\n        console.log(data); // this.isSuccessful = true;\n        // this.isSignUpFailed = false;\n\n        this.newticket();\n        this.router.navigate(['/ticket']);\n      }, err => {// this.errorMessage = err.error.message;\n        // this.isSignUpFailed = true;\n      });\n    }\n\n    onSubmit() {\n      const id = this.route.snapshot.paramMap.get('id');\n\n      if (id) {\n        this.updateticket();\n      } else {\n        this.submitted = true;\n        this.save();\n      }\n    }\n\n    updateticket() {\n      // Put ticket form in FormData ///\n      for (let key in this.ticket) {\n        console.log(\"Insie Iterator\");\n        this.formData.append(key, this.ticket[key]);\n      }\n\n      if (this.file) {\n        console.log(\"I am here\"); // End of Request ///\n\n        this.ticketService.updateUploadticket(this.ticket.ticket_id, this.formData).subscribe(data => {\n          console.log(data); // this.isSuccessful = true;\n          // this.isSignUpFailed = false;\n\n          this.router.navigate(['/ticket']);\n        }, err => {// this.errorMessage = err.error.message;\n          // this.isSignUpFailed = true;\n        });\n      } else {\n        // End of Request ///\n        this.ticketService.updateticket(this.ticket.ticket_id, this.ticket).subscribe(data => {\n          console.log(data); // this.isSuccessful = true;\n          // this.isSignUpFailed = false;\n\n          this.router.navigate(['/ticket']);\n        }, err => {// this.errorMessage = err.error.message;\n          // this.isSignUpFailed = true;\n        });\n      }\n    }\n\n  }\n\n  CreateticketComponent.ɵfac = function CreateticketComponent_Factory(t) {\n    return new (t || CreateticketComponent)(i0.ɵɵdirectiveInject(i1.CategoryService), i0.ɵɵdirectiveInject(i2.StatusService), i0.ɵɵdirectiveInject(i3.CustomerService), i0.ɵɵdirectiveInject(i4.TicketService), i0.ɵɵdirectiveInject(i5.ActivatedRoute), i0.ɵɵdirectiveInject(i5.Router));\n  };\n\n  CreateticketComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateticketComponent,\n    selectors: [[\"app-create-ticket\"]],\n    decls: 55,\n    vars: 18,\n    consts: [[1, \"service_area\"], [1, \"container\"], [1, \"col-md-12\"], [1, \"row\"], [1, \"card\"], [1, \"frontend_h1\"], [1, \"card-content\"], [\"ngNativeValidate\", \"\", 2, \"width\", \"70%\", \"color\", \"black\", 3, \"ngSubmit\"], [1, \"form-group\", \"row\"], [\"for\", \"staticEmail\", 1, \"col-sm-4\", \"col-form-label\"], [1, \"col-sm-8\"], [\"type\", \"text\", \"name\", \"ticket_user_id\", \"required\", \"\", 1, \"form-select\", 2, \"height\", \"40px\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"ticket_user_id\", \"ngModel\"], [\"value\", \"0\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"name\", \"ticket_type_id\", \"required\", \"\", 1, \"form-select\", 2, \"height\", \"40px\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"ticket_type_id\", \"ngModel\"], [\"type\", \"text\", \"name\", \"ticket_status_id\", \"required\", \"\", 1, \"form-select\", 2, \"height\", \"40px\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"ticket_status_id\", \"ngModel\"], [\"type\", \"text\", \"id\", \"ticket_title\", \"required\", \"\", \"name\", \"ticket_title\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"inputPassword\", 1, \"col-sm-4\", \"col-form-label\"], [\"type\", \"text\", \"id\", \"ticket_description\", \"required\", \"\", \"name\", \"ticket_description\", 1, \"form-control\", 2, \"height\", \"200px\", 3, \"ngModel\", \"ngModelChange\"], [2, \"text-align\", \"right\", \"margin-top\", \"25px\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 2, \"width\", \"150px\"], [\"type\", \"reset\", 1, \"btn\", \"btn-danger\", 2, \"width\", \"150px\"], [3, \"value\"]],\n    template: function CreateticketComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-frontend-header\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 2)(6, \"div\", 4)(7, \"p\", 5);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 6)(10, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateticketComponent_Template_form_ngSubmit_10_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(11, \"div\", 8)(12, \"label\", 9);\n        i0.ɵɵtext(13, \"Select User\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 10)(15, \"select\", 11, 12);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateticketComponent_Template_select_ngModelChange_15_listener($event) {\n          return ctx.ticket.ticket_user_id = $event;\n        });\n        i0.ɵɵelementStart(17, \"option\", 13);\n        i0.ɵɵtext(18, \"Please Select\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, CreateticketComponent_option_19_Template, 2, 2, \"option\", 14);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"div\", 8)(21, \"label\", 9);\n        i0.ɵɵtext(22, \"Select Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 10)(24, \"select\", 15, 16);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateticketComponent_Template_select_ngModelChange_24_listener($event) {\n          return ctx.ticket.ticket_type_id = $event;\n        });\n        i0.ɵɵelementStart(26, \"option\", 13);\n        i0.ɵɵtext(27, \"Please Select\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(28, CreateticketComponent_option_28_Template, 2, 2, \"option\", 14);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(29, \"div\", 8)(30, \"label\", 9);\n        i0.ɵɵtext(31, \"Select Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 10)(33, \"select\", 17, 18);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateticketComponent_Template_select_ngModelChange_33_listener($event) {\n          return ctx.ticket.ticket_status_id = $event;\n        });\n        i0.ɵɵelementStart(35, \"option\", 13);\n        i0.ɵɵtext(36, \"Please Select\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(37, CreateticketComponent_option_37_Template, 2, 2, \"option\", 14);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(38, \"div\", 8)(39, \"label\", 9);\n        i0.ɵɵtext(40, \"Ticket Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"div\", 10)(42, \"input\", 19);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateticketComponent_Template_input_ngModelChange_42_listener($event) {\n          return ctx.ticket.ticket_title = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(43, \"div\", 8)(44, \"label\", 20);\n        i0.ɵɵtext(45, \"Description of Ticket\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"div\", 10)(47, \"textarea\", 21);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateticketComponent_Template_textarea_ngModelChange_47_listener($event) {\n          return ctx.ticket.ticket_description = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(48, \"div\", 22)(49, \"button\", 23);\n        i0.ɵɵtext(50, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(51, \"\\u00A0\\u00A0 \");\n        i0.ɵɵelementStart(52, \"button\", 24);\n        i0.ɵɵtext(53, \"Reset\");\n        i0.ɵɵelementEnd()()()()()()()()()();\n        i0.ɵɵelement(54, \"app-frontend-footer\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isUpdate ? \"Update Ticket Details\" : \"Raise a New Ticket\", \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵstyleMapInterpolate1(\"display:\", ctx.display, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.ticket.ticket_user_id)(\"value\", ctx.ticket.ticket_user_id);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.user);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.ticket.ticket_type_id)(\"value\", ctx.ticket.ticket_type_id);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.category);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleMapInterpolate1(\"display:\", ctx.display, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.ticket.ticket_status_id)(\"value\", ctx.ticket.ticket_status_id);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.status);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.ticket.ticket_title);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.ticket.ticket_description);\n      }\n    },\n    dependencies: [i6.NgForOf, i7.NgSelectOption, i7.ɵNgSelectMultipleOption, i7.DefaultValueAccessor, i7.SelectControlValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.NgModel, i7.NgForm, i8.FrontendHeaderComponent, i9.FrontendFooterComponent],\n    styles: [\"label[_ngcontent-%COMP%]{color:#000!important;font-size:13px}\"]\n  });\n  return CreateticketComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}